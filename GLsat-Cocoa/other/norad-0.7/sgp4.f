*     SGP4  SGP4 PREDICTION   (STANDALONE SGP4/SGP44)  15OCT90

      SUBROUTINE SGP4(IER)

************************************************************************
*                                                                      *
*     SGP4 (SPADOC COMPATIBLE) PREDICITION MODEL FROM SPACETRACK       *
*     REPORT #__.  THIS IS AN UPDATED VERSION OF SGP4 AND SDP4, WHICH  *
*     WERE ORIGINALLY PUBLISHED SEPARATELY IN SPACETRACK REPORT #3.    *
*                                                                      *
*     INIT = 0   DO PREDICTION ONLY                                    *
*     INIT = 1   INITIALIZE AND PREDICT (THIS IS HARDWIRED IN SGP4I)   *
*                                                                      *
*     ERROR RETURNS                                                    *
*                                                                      *
*            IER = 0    NO ERRORS                                      *
*            IER = 1    ECC OR MEAN MOTION OUT OF BOUNDS               *
*                                                                      *
************************************************************************

      IMPLICIT DOUBLE PRECISION (A-H,O-Z)

      INTEGER YR
      INTEGER*4 SATN

      COMMON/CONST/C1,C1P2P,PI,PIO2,QZMS2T,RPTIM,SS,THGR70,TWOPI,X2O3,
     1       X3PIO2,XJ2,XJ3,XJ4,XKE,XKMPER,XJ3OJ2
      COMMON/ELT/R,TC,X,Y,Z,XDOT,YDOT,ZDOT
      COMMON/ELTM/AM,EM,XINCM,XNODEM,OMEGAM,XMAM,CNODM,CON49,COSIM,
     1       COSOMM,EMSQ,RTEMSQ,SINIM,SINOMM,SNODM,XN
      COMMON/EPELM/AO,EO,XINCO,XNODEO,OMEGAO,XMAO,AINV,BSTAR,CNDOT,
     1       CON41,CON42,COSIO,COSIO2,EINV,EOSQ,EPOCH,OMEOSQ,
     2       OMGDT,POSQ,QO,RTEOSQ,SINIO,T,THGRO,XMDOT,XNDOT,
     3       XNO,XNODOT,XPIDOT,SATN,YR,INIT,METHOD
************************************************************************

*     SET MATHEMATICAL CONSTANTS  *

      PIO2=1.570796326794897D0
      X3PIO2=4.712388980384690D0
      PI=3.14159265358979D0
      TWOPI=6.283185307179586D0
      DE2RA=1.745329251994330D-2
      X2O3=2.D0/3.D0

*     SET PHYSICAL CONSTANTS  *

*     FK5 CONSTANT VALUE  *
      C1=1.72027916940703639D-2
      C1P2P=C1+TWOPI
      THGR70=1.7321343856509374D0
*     WGS-72 EARTH CONSTANTS *
      XKE=7.43669161331734132D-2
      XKMPER=6378.135D0
      XPDOTP=229.1831180523293D0
      RPTIM=4.37526908801129966D-3
      XJ2=1.082616D-3
      XJ3=-2.53881D-6
      XJ4=-1.65597D-6
      XJ3OJ2=XJ3/XJ2
*     OTHER CONSTANTS *
      XMNPDA=1440.D0
      SS=78.D0/XKMPER+1.D0
      QZMS2T=((120.D0-78.D0)/XKMPER)**4
*     CLEAR SGP4 ERROR FLAG *
      IER=0

      IF(INIT .EQ. 0) GO TO 100

*     INITIALIZATION

      CALL INITL
      IF(OMEOSQ .LT. 0.D0 .OR. XNO .LT. 0.D0) GO TO 700
      ISIMP=0
      IF(QO .LT. (220.D0/XKMPER+1.D0)) ISIMP=1
      S4=SS
      QZMS24=QZMS2T
      PERIGE=(QO-1.D0)*XKMPER
      IF(PERIGE .GE. 156.D0) GO TO 40
      S4=PERIGE-78.D0
      IF(PERIGE .GT. 98.D0) GO TO 30
      S4=20.D0
   30 QZMS24=((120.D0-S4)/XKMPER)**4
      S4=S4/XKMPER+1.D0
   40 PINVSQ=1.D0/POSQ
      TSI=1.D0/(AO-S4)
      ETA=AO*EO*TSI
      ETASQ=ETA*ETA
      EETA=EO*ETA
      PSISQ=ABS(1.D0-ETASQ)
      COEF=QZMS24*TSI**4
      COEF1=COEF/PSISQ**3.5D0
      CC2=COEF1*XNO*(AO*(1.D0+1.5D0*ETASQ+EETA*(4.D0+ETASQ))+.375D0*
     1       XJ2*TSI/PSISQ*CON41*(8.D0+3.D0*ETASQ*(8.D0+ETASQ)))
      CC1=BSTAR*CC2
      CC3=0.D0
      IF(EO .GT. 1.D-4) CC3=-2.D0*COEF*TSI*XJ3OJ2*XNO*SINIO/EO
      X1MTH2=1.D0-COSIO2
      CC4=2.D0*XNO*COEF1*AO*OMEOSQ*(ETA*(2.D0+.5D0*ETASQ)+EO*(.5D0+
     1       2.D0*ETASQ)-XJ2*TSI/(AO*PSISQ)*(-3.D0*CON41*(1.D0-2.D0*
     2       EETA+ETASQ*(1.5D0-.5D0*EETA))+.75D0*X1MTH2*(2.D0*ETASQ
     3       -EETA*(1.D0+ETASQ))*COS(2.D0*OMEGAO)))
      CC5=2.D0*COEF1*AO*OMEOSQ*(1.D0+2.75D0*(ETASQ+EETA)+EETA*ETASQ)
      COSIO4=COSIO2*COSIO2
      TEMP1=1.5D0*XJ2*PINVSQ*XNO
      TEMP2=.5D0*TEMP1*XJ2*PINVSQ
      TEMP3=-.46875D0*XJ4*PINVSQ*PINVSQ*XNO
      XMDOT=XNO+.5D0*TEMP1*RTEOSQ*CON41+.0625D0*TEMP2*RTEOSQ*(13.D0
     1       -78.D0*COSIO2+137.D0*COSIO4)
      OMGDT=-.5D0*TEMP1*CON42+.0625D0*TEMP2*(7.D0-114.D0*COSIO2+
     1       395.D0*COSIO4)+TEMP3*(3.D0-36.D0*COSIO2+49.D0*COSIO4)
      XHDOT1=-TEMP1*COSIO
      XNODOT=XHDOT1+(.5D0*TEMP2*(4.D0-19.D0*COSIO2)+2.D0*TEMP3*(3.D0
     1       -7.D0*COSIO2))*COSIO
      XPIDOT=OMGDT+XNODOT
      OMGCOF=BSTAR*CC3*COS(OMEGAO)
      XMCOF=0.D0
      IF(EO .GT. 1.D-4) XMCOF=-X2O3*COEF*BSTAR/EETA
      XNODCF=3.5D0*OMEOSQ*XHDOT1*CC1
      T2COF=1.5D0*CC1
      XLCOF=-.25D0*XJ3OJ2*SINIO*(3.D0+5.D0*COSIO)/(1.D0+COSIO)
      AYCOF=-.5D0*XJ3OJ2*SINIO
      DELMO=(1.D0+ETA*COS(XMAO))**3
      SINMAO=SIN(XMAO)
      X7THM1=7.D0*COSIO2-1.D0
      IF((TWOPI/XNO) .LT. 225.D0) GO TO 80
      METHOD=2
      ISIMP=1 
      INITDS=0
      TC=0.D0
      XINCM=XINCO
      XNP=XNO             !  THE NEXT SIX LINES WERE ADDED FOR V3.01
      EP=EO
      XINCP=XINCO
      XNODEP=XNODEO
      OMEGAP=OMEGAO
      XMAP=XMAO

CRM   Next line calculates solar-lunar perturbation offsets at
CRM   satellite epoch.  Init=1 at this point, and is passed through
CRM   the /EPELM/ common block.
      CALL DPPER(XNP,EP,XINCP,XNODEP,OMEGAP,XMAP,INITDS)   ! V3.01
CRM   Note:  The next six lines don't do anything.  They are the
CRM   reverse of the six lines preceding the call to DPPER, and
CRM   would only be necessary if XNP, EP, XINCP, XNODEP, OMEGAP
CRM   and XMAP were changed by DPPER.  XNP is an input only in DPPER.
CRM   It is not modified there.  The remaining five variables
CRM   are only modified when INIT = 0, and INIT is always 1
CRM   at this part of the code.
      XNO=XNP             !  THE NEXT SIX LINES WERE ADDED FOR V3.01
      EO=EP
      XINCO=XINCP
      XNODEO=XNODEP
      OMEGAO=OMEGAP
      XMAO=XMAP
      IF(EO .LT. 0.D0 .OR. EO .GT. 1.D0) GO TO 700
      CALL DSPACE(DNDT,DEDT,DIDT,DNODT,DOMDT,DMDT,INITDS)
   80 IF(ISIMP .EQ. 1) GO TO 90
      CC1SQ=CC1*CC1
      D2=4.D0*AO*TSI*CC1SQ
      TEMP=D2*TSI*CC1/3.D0
      D3=(17.D0*AO+S4)*TEMP
      D4=.5D0*TEMP*AO*TSI*(221.D0*AO+31.D0*S4)*CC1
      T3COF=D2+2.D0*CC1SQ
      T4COF=.25D0*(3.D0*D3+CC1*(12.D0*D2+10.D0*CC1SQ))
      T5COF=.2D0*(3.D0*D4+12.D0*CC1*D3+6.D0*D2*D2+15.D0*CC1SQ*(2.D0
     1       *D2+CC1SQ))
   90 INIT=0

*     UPDATE FOR SECULAR GRAVITY AND ATMOSPHERIC DRAG

  100 XMDF=XMAO+XMDOT*T
      OMGADF=OMEGAO+OMGDT*T
      XNODDF=XNODEO+XNODOT*T
      OMEGAM=OMGADF
      XMAM=XMDF
      T2=T*T
      XNODEM=XNODDF+XNODCF*T2
      TEMPA=1.D0-CC1*T
      TEMPE=BSTAR*CC4*T
      TEMPL=T2COF*T2
      IF(ISIMP .EQ. 1) GO TO 110
      DELOMG=OMGCOF*T
      DELM=XMCOF*((1.D0+ETA*COS(XMDF))**3-DELMO)
      TEMP=DELOMG+DELM
      XMAM=XMDF+TEMP
      OMEGAM=OMGADF-TEMP
      T3=T2*T
      T4=T3*T
      TEMPA=TEMPA-D2*T2-D3*T3-D4*T4
      TEMPE=TEMPE+BSTAR*CC5*(SIN(XMAM)-SINMAO)
      TEMPL=TEMPL+T3COF*T3+T4*(T4COF+T*T5COF)
  110 XN=XNO
      EM=EO
      XINCM=XINCO
      IF(METHOD .EQ. 2) THEN
             TC=T
             INITDS=INITDS+1
             CALL DSPACE(DNDT,DEDT,DIDT,DNODT,DOMDT,DMDT,INITDS)
      END IF
      IF(XN .LE. 0.D0) GO TO 700
      AM=(XKE/XN)**X2O3*TEMPA**2
      XN=XKE/AM**1.5D0
      EM=EM-TEMPE
      IF(EM .GE. 1.D0) GO TO 700
C     IF(EM .LT. 0.D0) GO TO 700       ! DELETED FOR V3.01
      IF(EM .LT. -1.D-3) GO TO 700     ! ADDED FOR V3.01
C     IF(EM .LT. 1.D-6) EM=1.D-6       ! DELETED FOR V3.01
      IF(EM .LT. 0.D0) EM=1.D-6        ! ADDED FOR V3.01
      XMAM=XMAM+XNO*TEMPL
      XLM=XMAM+OMEGAM+XNODEM
      EMSQ=EM*EM
      TEMP=1.D0-EMSQ
      RTEMSQ=SQRT(TEMP)
      XNODEM=FMOD2P(XNODEM)
      OMEGAM=FMOD2P(OMEGAM)
      XLM=FMOD2P(XLM)
      XMAM=FMOD2P(XLM-OMEGAM-XNODEM)

*     COMPUTE EXTRA MEAN QUANTITIES

      SINIM=SIN(XINCM)
      COSIM=COS(XINCM)
      SINOMM=SIN(OMEGAM)
      COSOMM=COS(OMEGAM)

*     ADD LUNAR-SOLAR PERIODICS

      XNP=XN
      EP=EM
      XINCP=XINCM
      OMEGAP=OMEGAM
      XNODEP=XNODEM
      XMAP=XMAM
      SINIP=SINIM
      COSIP=COSIM
      IF(METHOD .EQ. 2) THEN
             CALL DPPER(XNP,EP,XINCP,XNODEP,OMEGAP,XMAP,INITDS)
             IF(XINCP .LT. 0.D0) THEN
                    XINCP=-XINCP
                    XNODEP=XNODEP+PI
                    OMEGAP=OMEGAP-PI
             END IF
             IF(EP .LT. 0.D0 .OR. EP .GT. 1.D0) GO TO 700
      END IF

*     LONG PERIOD PERIODICS

      IF(METHOD .EQ. 2) THEN
             SINIP=SIN(XINCP)
             COSIP=COS(XINCP)
             AYCOF=-.5D0*XJ3OJ2*SINIP
             XLCOF=-.25D0*XJ3OJ2*SINIP*(3.D0+5.D0*COSIP)/(1.D0+COSIP)
      END IF
      AXNL=EP*COS(OMEGAP)
      TEMP=1.D0/(AM*(1.D0-EP*EP))
      AYNL=EP*SIN(OMEGAP)+TEMP*AYCOF
      XL=XMAP+OMEGAP+XNODEP+TEMP*XLCOF*AXNL

*     SOLVE KEPLER'S EQUATION

      U=FMOD2P(XL-XNODEP)
      EO1=U
  120 SINEO1=SIN(EO1)
      COSEO1=COS(EO1)
      TEM5=1.D0-COSEO1*AXNL-SINEO1*AYNL
      TEM5=(U-AYNL*COSEO1+AXNL*SINEO1-EO1)/TEM5
      IF(DABS(TEM5) .LT. 1.D-12) GO TO 130
      EO1=EO1+TEM5
      GO TO 120

*     SHORT PERIOD PRELIMINARY QUANTITIES

  130 ECOSE=AXNL*COSEO1+AYNL*SINEO1
      ESINE=AXNL*SINEO1-AYNL*COSEO1
      EL2=AXNL*AXNL+AYNL*AYNL
      PL=AM*(1.D0-EL2)
      IF ( PL .LT. 0.D0 ) GO TO 700
      RL=AM*(1.D0-ECOSE)
      RDOTL=SQRT(AM)*ESINE/RL
      RVDOTL=SQRT(PL)/RL
      BETAL=SQRT(1.D0-EL2)
      TEMP=ESINE/(1.D0+BETAL)
      SINU=AM/RL*(SINEO1-AYNL-AXNL*TEMP)
      COSU=AM/RL*(COSEO1-AXNL+AYNL*TEMP)
      SU=ACTAN(SINU,COSU)
      SIN2U=(COSU+COSU)*SINU
      COS2U=1.D0-2.D0*SINU*SINU
      TEMP=1.D0/PL
      TEMP1=.5D0*XJ2*TEMP
      TEMP2=TEMP1*TEMP

*     UPDATE FOR SHORT PERIOD PERIODICS

      IF(METHOD .EQ. 2) THEN
             COSISQ=COSIP*COSIP
             CON41=3.D0*COSISQ-1.D0
             X1MTH2=1.D0-COSISQ
             X7THM1=7.D0*COSISQ-1.D0
      END IF
      R=RL*(1.D0-1.5D0*TEMP2*BETAL*CON41)+.5D0*TEMP1*X1MTH2*COS2U
      SU=SU-.25D0*TEMP2*X7THM1*SIN2U
      XNODE=XNODEP+1.5D0*TEMP2*COSIP*SIN2U
      XINC=XINCP+1.5D0*TEMP2*COSIP*SINIP*COS2U
      RDOT=RDOTL-XN*TEMP1*X1MTH2*SIN2U/XKE
      RVDOT=RVDOTL+XN*TEMP1*(X1MTH2*COS2U+1.5D0*CON41)/XKE

*     ORIENTATION VECTORS

      SINSU=SIN(SU)
      COSSU=COS(SU)
      SNOD=SIN(XNODE)
      CNOD=COS(XNODE)
      SINI=SIN(XINC)
      COSI=COS(XINC)
      XMX=-SNOD*COSI
      XMY=CNOD*COSI
      UX=XMX*SINSU+CNOD*COSSU
      UY=XMY*SINSU+SNOD*COSSU
      UZ=SINI*SINSU
      VX=XMX*COSSU-CNOD*SINSU
      VY=XMY*COSSU-SNOD*SINSU
      VZ=SINI*COSSU

*     POSITION AND VELOCITY

      X=R*UX
      Y=R*UY
      Z=R*UZ
      XDOT=RDOT*UX+RVDOT*VX
      YDOT=RDOT*UY+RVDOT*VY
      ZDOT=RDOT*UZ+RVDOT*VZ
      GO TO 999

*     ERROR PROCESSING

  700 IER=1

  999 RETURN

      END
